// FAUST standard library
import("stdfaust.lib");

//-LUCA-SPANEDDA-DIGITAL-REVERBS-LIBRARY----------------------------------------
//------------------------------------------------------------------------------


//-UTILITIES--------------------------------------------------------------------
//
//------------------------------------------------------------------------------
// CONVERSION MILLISECONDS TO SAMPLES
//------------------------------------------------------------------------------
// (t) = give time in milliseconds we want to know in samples
msasamps(t) = (ma.SR / 1000.) * t;
//
//
//------------------------------------------------------------------------------
// CONVERSION SAMPLES TO MILLISECONDS
//------------------------------------------------------------------------------
// (samps) = give tot. samples we want to know in milliseconds
sampsams(samps) = ((1000 / ma.SR) * samps);
//
//
//------------------------------------------------------------------------------
// T60 DECAY TIME
//------------------------------------------------------------------------------
// (samps,seconds) = give: samples of the filter, seconds we want for t60 decay
dect60(samps,seconds) = 1/(10^((3*(((1000 / 44100)*samps)/1000))/seconds));
//
//


//-FILTERS----------------------------------------------------------------------
//
//------------------------------------------------------------------------------
// ONEZERO FILTER (FIR of I° Order)
//------------------------------------------------------------------------------
// (g) = give amplitude 0-1(open-close) to the delayed signal
ozf(g) = _<:(mem*g), _ :> +;
//
//
//------------------------------------------------------------------------------
// ONEPOLE FILTER (IIR of I° Order)
//------------------------------------------------------------------------------
// (g) = give amplitude 1-0(open-close) for the lowpass cut
oplf(g) = _*g : +~(_ : *(1- g));
//
//
//------------------------------------------------------------------------------
// FASTFORWARD COMB FILTER (FIR of N° Order)
//------------------------------------------------------------------------------
// (t,g) = delay time in samples, filter gain 0-1
ffcf(t,g) = _ <: ( _@(t-1) *g), _ :> _;
//
//
//------------------------------------------------------------------------------
// FEEDBACK COMB FILTER (IIR of N° Order)
//------------------------------------------------------------------------------
// (t,g) = give: delay time in samples, feedback gain 0-1
fbcf(t,g) = _ : (+  @(t-1)~ *(g)) : mem;
//
//
//------------------------------------------------------------------------------
// LOWPASS FEEDBACK COMB FILTER (IIR of N° Order)
//------------------------------------------------------------------------------
// (t,g,cut) = give: delay samps, feedback gain 0-1, lowpass cut 1-0(open-close)
lfbcf(t,g,cut) = (+ : @(t-1) : _*cut : +~(_ : *(1-cut)))~ *(g) : mem;
//
//
//------------------------------------------------------------------------------
// ALLPASS FILTER (FIR + IIR COMB FILTER)
//------------------------------------------------------------------------------
// (t,g) = give: delay in samples, feedback gain 0-1
apf(t,g) = (+: _<: @(t-1), *(g))~ *(-g) : mem, _ : + : _;
//
//


//-REVERBERATORS----------------------------------------------------------------
//